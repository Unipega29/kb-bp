import random

# 初期設定
initial_capital = 100000  # 初期資金
odds = [4.5, 5.2, 6.0, 7.0, 4.2, 6.5, 3.8, 5.5, 4.3, 8.0, 4.8, 5.0, 4.0, 6.7, 7.2, 4.1, 5.9, 4.4]  # オッズ
distribution_percentages = [29.34, 21.03, 14.35, 11.83, 8.33, 5.63, 4.59, 3.31, 1.59]  # 分割割合
max_horses = len(odds)
num_trials = 1000  # 試行回数

# 賭け金を計算する関数
def calculate_bets(total_amount, odds, distribution_percentages):
    remaining_amount = total_amount
    bets = []

    # 最低賭け金額の計算
    for i in range(len(odds)):
        odds_value = odds[i]
        if odds_value >= 4:  # オッズが4以上の場合のみ計算
            minimum_bet = max(100, (total_amount * 1.1) / odds_value // 100 * 100)  # 最低賭け金額を100円単位
            remaining_amount -= minimum_bet
            bets.append({'horse': i + 1, 'bet': minimum_bet, 'odds': odds_value})

    # 残った資金を割合に従って分ける
    count = 0
    for bet in bets:
        if count < len(distribution_percentages):
            additional_bet = (remaining_amount * distribution_percentages[count]) / 100
            bet['bet'] += int(additional_bet // 100 * 100)  # 100円単位で加算
            count += 1

    return bets, remaining_amount

# シミュレーション
capital = initial_capital
capital_history = [capital]

for _ in range(num_trials):
    if random.random() < 0.1:  # 10%の確率で賭け金が0になる
        capital = 0
    else:
        bets, remaining_amount = calculate_bets(capital, odds, distribution_percentages)
        total_payout = sum([bet['bet'] * bet['odds'] for bet in bets])  # 払戻額
        capital = capital - sum([bet['bet'] for bet in bets]) + total_payout  # 資金の更新
    
    capital_history.append(capital)

# 結果表示
capital_history[:20], capital_history[-20:]  # 最初と最後の20回分を表示
